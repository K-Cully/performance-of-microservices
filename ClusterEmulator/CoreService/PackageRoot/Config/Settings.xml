<?xml version="1.0" encoding="utf-8" ?>
<Settings xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.microsoft.com/2011/01/fabric">
  <Section Name="Processors">
    <Parameter Name="Load" Value="{ errorSize : 100, latency : 0, steps : [ 'LoadA', 'LoadB' ], successSize : 20 }" />
    <Parameter Name="ReuseSockets" Value="{ errorSize : 15, latency : 0, steps : [ 'RequestReuseSocketA' ], successSize : 0 }" />
    <Parameter Name="NewSockets" Value="{ errorSize : 128, latency : 60, steps : [ 'RequestNewSocketA' ], successSize : 512 }" />
  </Section>
  <Section Name="Steps">
    <Parameter Name="LoadA" Value="{ type : 'LoadStep', step : { bytes : 100, time : 10, percent : 20 } }" />
    <Parameter Name="LoadB" Value="{ type : 'LoadStep', step : { bytes : 512000000, time : 3, percent : 90 } }" />
    <Parameter Name="RequestReuseSocketA" Value="{ type : 'RequestStep', step : { client : 'GitHubA', method : 'get', path : 'test/', size : 128, reuseSockets : true, trueAsync : false } }"/>
    <Parameter Name="ErrorA" Value="{ type : 'ErrorStep', step : { probability: 0.3 } }"/>
    <Parameter Name="RequestNewSocketA" Value="{ type : 'RequestStep', step : { client : 'GitHubB', method : 'get', path : 'test/', size : 128, reuseSockets : false, trueAsync : false } }"/>
  </Section>
  <Section Name="Clients">
    <Parameter Name="GitHubA" Value="{ baseAddress : 'https://github.com/', policies : [ 'RetryA', 'TimeoutB' ], headers : { 'Accept' : 'application/json' } }" />
    <Parameter Name="GitHubB" Value="{ baseAddress : 'https://github.com/', policies : [ 'FallbackA', 'RetryA' ], headers : { 'Accept' : 'application/json' } }" />
  </Section>
  <Section Name="Policies">
    <Parameter Name="RetryA" Value="{ type : 'RetryConfig', policy : { retries : 3, delays : [ 1, 5 ] } }" />
    <Parameter Name="RetryB" Value="{ type : 'RetryConfig', policy : { retries : 0, delays : [ -1 ], jitter : 300 } }" />
    <Parameter Name="TimeoutA" Value="{ type : 'TimeoutConfig', policy : { cancelDelegates : false, time : 3.0 } }" />
    <Parameter Name="TimeoutB" Value="{ type : 'TimeoutConfig', policy : { cancelDelegates : true, time : 0.001 } }" />
    <Parameter Name="FallbackA" Value="{ type : 'FallbackConfig', policy : { statusCode : 200, reason : 'fallback triggered', content : 'who knows?' } }" />
  </Section>
</Settings>
