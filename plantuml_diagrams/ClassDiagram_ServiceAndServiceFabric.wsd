@startuml

title ClusterEmulator.ServiceFabric Class Diagram

skinparam class {
    FontName Arial
    BorderColor black
    BackgroundColor whitesmoke
    ArrowColor black
}

namespace ClusterEmulator.ServiceFabric {
    namespace Extensions {
        class ServiceCollectionExtensions << (S,#DDAA00) static >> {
            {static} + AddSimulationSettings(serviceCollection, serviceContext) : IServiceCollection
        }
    }

    namespace Configuration {
        class FabricConfigurationSettings {
            - settings : ConfigurationSettings
            + TryGetSection(name, settingKeyValuePairs) : boolean
        }
    }

    namespace Telemetry {
        class StatelessServiceEnricher {
            - Context : StatelessServiceContext
            - serviceTypeName : LogEventProperty
            - serviceName : LogEventProperty
            - partitionId : LogEventProperty
            - instanceId : LogEventProperty
            - nodeName : LogEventProperty
            + Enrich(logEvent, logEventPropertyFactory)
        }
    }

    ClusterEmulator.ServiceFabric.Telemetry.StatelessServiceEnricher -> ClusterEmulator.ServiceFabric.Configuration.FabricConfigurationSettings
}


namespace EmulationService {
    namespace Controllers {
        class EmulationController
    }

    namespace Telemetry {
        class CorrelatedLogContext
    }

    class EmulationService {
        - Log : Serilog.ILogger
        # CreateServiceInstanceListeners() : IEnumerable<ServiceInstanceListener>
    }

    class Program << (S,#DDAA00) static >> {
        - ServiceTypeName : string
        {static} - Configuration : IConfiguration
        {static} - Main()
    }

    Program -up-> EmulationService

    class Startup {
        - Registry : IRegistry
        + ConfigureServices(serviceCollection)
        + Configure(applicationBuilder, hostingEnvironment,\n       httpClientFactory, emulationRegistry, emulationEngine)
    }

    Startup --> EmulationService.Telemetry.CorrelatedLogContext
}

namespace System.Fabric #whitesmoke {
    class StatelessServiceContext

    namespace Description {
        class ConfigurationSettings
        class ConfigurationSection
    }
}

namespace Serilog #whitesmoke {
    namespace Core {
        interface ILogEventEnricher
        interface ILogEventPropertyFactory
        class Logger
    }

    namespace Events {
        class LogEvent
        class LogEventProperty
    }

    namespace Context {
        class LogContext << (S,#DDAA00) static >>
    }

    namespace Configuration {
        class LoggerSettingsConfiguration
    }

    interface ILogger
    class SerilogWebHostBuilderExtensions << (S,#DDAA00) static >>
    class ConfigurationLoggerConfigurationExtensions << (S,#DDAA00) static >>
    class LoggerConfiguration
    class Log << (S,#DDAA00) static >>
}

namespace ClusterEmulator.Emulation #whitesmoke {
    namespace Core {
        interface IEngine
        interface IRegistry
        interface IRegistrySettings
    }

    namespace Controllers {
        class AdaptableController
    }

    namespace Logging {
        interface IScopedLogContextFactory
    }

    namespace Extensions {
        class ServiceCollectionExtensions << (S,#DDAA00) static >>
    }
}

namespace Microsoft #whitesmoke {
    namespace Extensions {
        namespace DependencyInjection {
            interface IServiceCollection
            class ServiceCollectionServiceExtensions << (S,#DDAA00) static >>
            class HttpClientFactoryServiceCollectionExtensions << (S,#DDAA00) static >>
            class MvcServiceCollectionExtensions << (S,#DDAA00) static >>
            class MvcCoreMvcBuilderExtensions << (S,#DDAA00) static >>
            class HealthCheckServiceCollectionExtensions << (S,#DDAA00) static >>
        }
        
        namespace Configuration {
            interface IConfiguration
            class ConfigurationBuilder
            class FileConfigurationExtensions << (S,#DDAA00) static >>
            class JsonConfigurationExtensions << (S,#DDAA00) static >>
            class EnvironmentVariablesExtensions << (S,#DDAA00) static >>
        }

        namespace Primitives {
            class StringValues
        }
    }

    namespace AspNetCore {
        namespace Hosting {
            class WebHostBuilder
            class WebHostBuilderExtensions << (S,#DDAA00) static >>
            class WebHostBuilderKestrelExtensions << (S,#DDAA00) static >>
            class HostingAbstractionsWebHostBuilderExtensions << (S,#DDAA00) static >>
        }

        namespace Mvc {
            enum CompatibilityVersion
            class ApiControllerAttribute
            class RouteAttribute
        }

        namespace Builder {
            interface IApplicationBuilder
            class MvcApplicationBuilderExtensions << (S,#DDAA00) static >>
            class HealthCheckApplicationBuilderExtensions << (S,#DDAA00) static >>
        }
    }

    namespace ServiceFabric {
        namespace Services {
            namespace Runtime {
                abstract StatelessService
                class ServiceRuntime << (S,#DDAA00) static >>
            }

            namespace Communication {
                namespace Runtime {
                    class ServiceInstanceListener
                }

                namespace AspNetCore {
                    class KestrelCommunicationListener
                    class WebHostBuilderServiceFabricExtension << (S,#DDAA00) static >>
                    enum ServiceFabricIntegrationOptions
                }
            }
        }
    }
}

'layout Microsoft namespaces'
Microsoft.Extensions -[hidden]---> Microsoft.AspNetCore
Microsoft.AspNetCore -[hidden]---> Microsoft.ServiceFabric

'layout Microsoft.Extensions namespaces'
Microsoft.Extensions.Configuration -[hidden]-> Microsoft.Extensions.DependencyInjection
Microsoft.Extensions.DependencyInjection -[hidden]-> Microsoft.Extensions.Primitives

'layout Microsoft.AspNetCore namespaces'
Microsoft.AspNetCore.Builder -[hidden]-> Microsoft.AspNetCore.Hosting
Microsoft.AspNetCore.Hosting -[hidden]-> Microsoft.AspNetCore.Mvc

'layout Microsoft.ServiceFabric namespaces'
Microsoft.ServiceFabric.Services.Communication.Runtime -[hidden]-> Microsoft.ServiceFabric.Services.Communication.AspNetCore
Microsoft.ServiceFabric.Services.Communication.AspNetCore -[hidden]-> Microsoft.ServiceFabric.Services.Runtime

namespace System.Net.Http #whitesmoke {
    interface IHttpClientFactory
}

'layout Serilog namespaces'
Serilog.Log -[hidden]-> Serilog.Context
Serilog.Context -[hidden]-> Serilog.Configuration
Serilog.Configuration -[hidden]-> Serilog.Core
Serilog.Core -[hidden]-> Serilog.Events




'ClusterEmulator.ServiceFabric connections'
ClusterEmulator.ServiceFabric.Telemetry.StatelessServiceEnricher o--> Serilog.Events.LogEventProperty
ClusterEmulator.ServiceFabric.Telemetry.StatelessServiceEnricher o--> System.Fabric.StatelessServiceContext
ClusterEmulator.ServiceFabric.Telemetry.StatelessServiceEnricher --> Serilog.Events.LogEvent
ClusterEmulator.ServiceFabric.Telemetry.StatelessServiceEnricher --> Serilog.Core.ILogEventPropertyFactory
ClusterEmulator.ServiceFabric.Telemetry.StatelessServiceEnricher ..|> Serilog.Core.ILogEventEnricher

ClusterEmulator.ServiceFabric.Extensions.ServiceCollectionExtensions ..> Microsoft.Extensions.DependencyInjection.IServiceCollection : extends
ClusterEmulator.ServiceFabric.Extensions.ServiceCollectionExtensions --> System.Fabric.ServiceContext
ClusterEmulator.ServiceFabric.Extensions.ServiceCollectionExtensions --> ClusterEmulator.Emulation.Core.IRegistrySettings

ClusterEmulator.ServiceFabric.Configuration.FabricConfigurationSettings ..|> ClusterEmulator.Emulation.Core.IRegistrySettings
ClusterEmulator.ServiceFabric.Configuration.FabricConfigurationSettings o--> System.Fabric.Description.ConfigurationSettings
ClusterEmulator.ServiceFabric.Configuration.FabricConfigurationSettings --> System.Fabric.Description.ConfigurationSection


'Emulation Service Connections'
EmulationService.Controllers.EmulationController o-up-> Microsoft.AspNetCore.Mvc.ApiControllerAttribute
EmulationService.Controllers.EmulationController o-up-> Microsoft.AspNetCore.Mvc.RouteAttribute
EmulationService.Controllers.EmulationController --|> ClusterEmulator.Emulation.Controllers.AdaptableController

EmulationService.Telemetry.CorrelatedLogContext ..|> ClusterEmulator.Emulation.Logging.IScopedLogContextFactory
EmulationService.Telemetry.CorrelatedLogContext --> Microsoft.Extensions.Primitives.StringValues
EmulationService.Telemetry.CorrelatedLogContext --> Serilog.Context.LogContext

EmulationService.EmulationService --|> Microsoft.ServiceFabric.Services.Runtime.StatelessService
EmulationService.EmulationService o--> Serilog.ILogger
EmulationService.EmulationService --> ClusterEmulator.ServiceFabric.Telemetry.StatelessServiceEnricher
EmulationService.EmulationService --> System.Fabric.StatelessServiceContext
EmulationService.EmulationService -left-> Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener
EmulationService.EmulationService -left-> Microsoft.ServiceFabric.Services.Communication.AspNetCore.KestrelCommunicationListener
EmulationService.EmulationService -left-> Microsoft.ServiceFabric.Services.Communication.AspNetCore.ServiceFabricIntegrationOptions
EmulationService.EmulationService -left-> Microsoft.ServiceFabric.Services.Communication.AspNetCore.WebHostBuilderServiceFabricExtension
EmulationService.EmulationService -up-> Microsoft.AspNetCore.Hosting.WebHostBuilder
EmulationService.EmulationService -up-> Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions
EmulationService.EmulationService -up-> Microsoft.AspNetCore.Hosting.WebHostBuilderKestrelExtensions
EmulationService.EmulationService -up-> Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions
EmulationService.EmulationService -up-> Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions
EmulationService.EmulationService -up-> Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions
EmulationService.EmulationService --> ClusterEmulator.ServiceFabric.Extensions.ServiceCollectionExtensions
EmulationService.EmulationService --> ClusterEmulator.Emulation.Extensions.ServiceCollectionExtensions
EmulationService.EmulationService --> Serilog.SerilogWebHostBuilderExtensions

EmulationService.Program o-up-> Microsoft.Extensions.Configuration.IConfiguration
EmulationService.Program -up-> Microsoft.Extensions.Configuration.ConfigurationBuilder
EmulationService.Program -up-> Microsoft.Extensions.Configuration.FileConfigurationExtensions
EmulationService.Program -up-> Microsoft.Extensions.Configuration.JsonConfigurationExtensions
EmulationService.Program -up-> Microsoft.Extensions.Configuration.EnvironmentVariablesExtensions
EmulationService.Program --> Microsoft.ServiceFabric.Services.Runtime.ServiceRuntime
EmulationService.Program --> Serilog.Log
EmulationService.Program --> Serilog.LoggerConfiguration
EmulationService.Program --> Serilog.Core.Logger
EmulationService.Program --> Serilog.Configuration.LoggerSettingsConfiguration
EmulationService.Program --> Serilog.ConfigurationLoggerConfigurationExtensions

EmulationService.Startup o--> ClusterEmulator.Emulation.Core.IRegistry
EmulationService.Startup --> ClusterEmulator.Emulation.Core.IEngine
EmulationService.Startup -up-> Microsoft.Extensions.DependencyInjection.IServiceCollection
EmulationService.Startup -up-> Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions
EmulationService.Startup -up-> Microsoft.Extensions.DependencyInjection.MvcServiceCollectionExtensions
EmulationService.Startup -up-> Microsoft.Extensions.DependencyInjection.MvcCoreMvcBuilderExtensions
EmulationService.Startup -up-> Microsoft.Extensions.DependencyInjection.HealthCheckServiceCollectionExtensions
EmulationService.Startup -up-> Microsoft.AspNetCore.Mvc.CompatibilityVersion
EmulationService.Startup -up-> Microsoft.AspNetCore.Builder.IApplicationBuilder
EmulationService.Startup -up-> Microsoft.AspNetCore.Builder.MvcApplicationBuilderExtensions
EmulationService.Startup -up-> Microsoft.AspNetCore.Builder.HealthCheckApplicationBuilderExtensions
EmulationService.Startup -up--> System.Net.Http.IHttpClientFactory
EmulationService.Startup --> ClusterEmulator.Emulation.Extensions.ServiceCollectionExtensions
EmulationService.Startup --> ClusterEmulator.Emulation.Logging.IScopedLogContextFactory

@enduml