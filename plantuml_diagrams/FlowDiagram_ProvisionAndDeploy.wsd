@startuml

'Import Azure Sympols (MIT License)'
!define AzurePuml https://raw.githubusercontent.com/RicardoNiepel/Azure-PlantUML/master/dist
!include AzurePuml/AzureCommon.puml
!include AzurePuml/Compute/AzureServiceFabric.puml
!include AzurePuml/Compute/AzureVirtualMachineScaleSet.puml
!include AzurePuml/DevOps/AzureApplicationInsights.puml
!include AzurePuml/Management/AzureLogAnalytics.puml
!include AzurePuml/Networking/AzureLoadBalancer.puml
!include AzurePuml/Security/AzureKeyVault.puml

'Import skinparams'
!include .\Skinparams.puml

title Cluster Provisioning and Deployment

folder "Generated Application" as genApp {
    file "ports.json" as ports
}

folder "Generated Package" as genPack {    
    file "Packaged Application" as appPackage
}

genApp -[hidden]--> genPack

package "Cluster Provisioning" {
    file "ARM Template" as armTemplate
    file "Certificate" as cert
    agent "Azure Service Fabric\nProvisioner" as provisioner

    ports -> provisioner
    
    cert -up-> provisioner
    armTemplate -up-> provisioner
    provisioner -> Azure : provision\nresources
    
    agent "Deploy Application" as deployApp
    appPackage -> deployApp
    cert --> deployApp
}

cloud Azure {
    AzureLoadBalancer(loadBalancer, "Load Balancer", "ingress controller", "Handles service ingress and liveness")
    AzureKeyVault(keyVault, "Key Vault", "secret storage")
    database "Platform Telemetry\nStorage" as storage

    frame "Secure Virtual Network" {      
      AzureServiceFabric(sfCluster, "Service Fabric Cluster", "N Node cluster")
      AzureVirtualMachineScaleSet(scaleSet, "VM Scale Set", "N VMs", "Service hosting")

      sfCluster -> scaleSet
    }

    loadBalancer --> sfCluster
    sfCluster -> keyVault
    sfCluster --> storage

    AzureApplicationInsights(appInsights, "Application Insights", "App telemetry")
    AzureLogAnalytics(logAnalytics, "Log Analytics", "Platform telemetry")

    scaleSet --> appInsights
    scaleSet --> logAnalytics
    storage -> logAnalytics
}

provisioner --> keyVault : add cluster\ncertificate
deployApp -up-> sfCluster : deploy application

@enduml
