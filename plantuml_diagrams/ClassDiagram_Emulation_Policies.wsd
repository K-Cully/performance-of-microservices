@startuml

'Import skinparams'
!include .\Skinparams.puml

title ClusterEmulator.Emulation.HttpClientConfiguration Class Diagram

namespace ClusterEmulator.Emulation.Core {
    interface IConfigModel<TModel> {
        + AsTypeModel(logger) : TModel
    }
}

namespace ClusterEmulator.Emulation.HttpClientConfiguration {
    interface IPolicyConfiguration<extends IConfigModel<IAsyncPolicy>> extends ClusterEmulator.Emulation.Core.IConfigModel

    class PolicyExtensions << (S,#DDAA00) static >> {
        + {static} HandleHttpRequests() : PolicyBuilder<HttpResponseMessage>
    }

    class AdvancedCircuitBreakerConfig implements IPolicyConfiguration {
        + BreakDuration : double
        + FailureThreshold : double
        + SamplingDuration : double
        + MinimumThroughput : integer
    }

    class BulkheadConfig implements IPolicyConfiguration {
        + MaxParallelization : integer
        + MaxQueuingActions : integer
    }

    class CircuitBreakerConfig implements IPolicyConfiguration {
        + BreakDuration : double
        + FaultTolerance : integer
    }

    class FallbackConfig implements IPolicyConfiguration {

        + Content : string
        + Reason : string
        + Status : integer
    }

    class RetryConfig implements IPolicyConfiguration {
        + Retries : integer
        + DelaysInSeconds : IEnumerable<double>
        + JitterMilliseconds : integer
        - Delay(retryCount, exponential) : TimeSpan
        - ExponentialDelay(retryCount) : TimeSpan
        - DelayWithJitter(delay) : TimeSpan
    }

    class TimeoutConfig implements IPolicyConfiguration {
        + CancelDelegates : boolean
        + TimeoutInSeconds : double
    }

    class ClientConfig {
        + BaseAddress : string
        + Policies : IEnumerable<string>
        + RequestHeaders : IDictionary<string, string>
    }


    class CacheConfig implements IPolicyConfiguration {
        + Time : CacheTime
        + Absolute : boolean
        + Sliding : boolean
        - cacheProvider : IAsyncCacheProvider
        - strategy : ITtlStrategy
        + CacheConfig()
        + CacheConfig(cacheProvider)
        - CacheOKResponse(pollyContext, httpResponseMessage) : Ttl
        - CreateStrategy() : ITtlStrategy
    }

    class CacheTime {
        + Days : integer
        + Hours : integer
        + Minutes : integer
        + Seconds : integer
        + AsTimeSpan() : TimeSpan
    }

    CacheConfig *-left-> CacheTime
    AdvancedCircuitBreakerConfig -up-> PolicyExtensions
    CircuitBreakerConfig -up-> PolicyExtensions
    FallbackConfig -up-> PolicyExtensions
    RetryConfig --> PolicyExtensions
    
    TimeoutConfig -[hidden]> BulkheadConfig
    TimeoutConfig -[hidden]> RetryConfig

    FallbackConfig -[hidden]--> CacheConfig
}


namespace Microsoft.Extensions.Caching.Memory #whitesmoke {
    interface IMemoryCache
}

'Polly namespaces'
namespace Polly.Caching #whitesmoke {
    interface IAsyncCacheProvider
    interface ITtlStrategy
    class ResultTtl
    class SlidingTtl
    class RelativeTtl
    class AbsoluteTtl

    IAsyncCacheProvider -[hidden]> ITtlStrategy
    ITtlStrategy -[hidden]> ResultTtl
    ResultTtl -[hidden]-> SlidingTtl
    SlidingTtl -[hidden]> RelativeTtl
    RelativeTtl -[hidden]> AbsoluteTtl
}

namespace Polly #whitesmoke {
    interface IAsyncPolicy
    class Policy
    class PolicyBuilder
    class AsyncAdvancedCircuitBreakerTResultSyntax
    class AsyncCircuitBreakerTResultSyntax
    class AsyncFallbackTResultSyntax

    IAsyncPolicy -[hidden]-> Policy
    Policy -[hidden]> PolicyBuilder
    PolicyBuilder -[hidden]-> AsyncAdvancedCircuitBreakerTResultSyntax
    AsyncAdvancedCircuitBreakerTResultSyntax -[hidden]> AsyncCircuitBreakerTResultSyntax
    AsyncCircuitBreakerTResultSyntax -[hidden]> AsyncFallbackTResultSyntax
}

Polly.AsyncFallbackTResultSyntax -[hidden]-> Polly.Caching.ITtlStrategy

ClusterEmulator.Emulation.HttpClientConfiguration.IPolicyConfiguration -up-> Polly.IAsyncPolicy : creates

ClusterEmulator.Emulation.HttpClientConfiguration.PolicyExtensions --> Polly.Policy
ClusterEmulator.Emulation.HttpClientConfiguration.PolicyExtensions --> Polly.PolicyBuilder

ClusterEmulator.Emulation.HttpClientConfiguration.RetryConfig --> Polly.PolicyBuilder
ClusterEmulator.Emulation.HttpClientConfiguration.TimeoutConfig --> Polly.Policy
ClusterEmulator.Emulation.HttpClientConfiguration.BulkheadConfig --> Polly.Policy

ClusterEmulator.Emulation.HttpClientConfiguration.AdvancedCircuitBreakerConfig --> Polly.AsyncAdvancedCircuitBreakerTResultSyntax
ClusterEmulator.Emulation.HttpClientConfiguration.CircuitBreakerConfig --> Polly.AsyncCircuitBreakerTResultSyntax
ClusterEmulator.Emulation.HttpClientConfiguration.FallbackConfig --> Polly.AsyncFallbackTResultSyntax

ClusterEmulator.Emulation.HttpClientConfiguration.CacheConfig --> Polly.Policy
ClusterEmulator.Emulation.HttpClientConfiguration.CacheConfig o--> Polly.Caching.IAsyncCacheProvider
ClusterEmulator.Emulation.HttpClientConfiguration.CacheConfig o--> Polly.Caching.ITtlStrategy
ClusterEmulator.Emulation.HttpClientConfiguration.CacheConfig --> Polly.Caching.AbsoluteTtl
ClusterEmulator.Emulation.HttpClientConfiguration.CacheConfig --> Polly.Caching.SlidingTtl
ClusterEmulator.Emulation.HttpClientConfiguration.CacheConfig --> Polly.Caching.RelativeTtl
ClusterEmulator.Emulation.HttpClientConfiguration.CacheConfig --> Polly.Caching.ResultTtl
ClusterEmulator.Emulation.HttpClientConfiguration.CacheConfig --> Microsoft.Extensions.Caching.Memory.IMemoryCache

@enduml